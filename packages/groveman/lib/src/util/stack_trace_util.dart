import 'dart:core';

import 'package:meta/meta.dart';

@immutable
class StackTraceUtil {
  /// Matches a stacktrace line as generated on Android/iOS devices.
  final _deviceStackTraceRegex = RegExp(r'#[0-9]+[\s]+(.+) \(([^\s]+)\)');

  /// Matches a stacktrace line as generated by Flutter web.
  final _webStackTraceRegex = RegExp(r'^((packages|dart-sdk)\/[^\s]+\/)');

  /// Matches a stacktrace line as generated by browser Dart.
  final _browserStackTraceRegex = RegExp(r'^(?=package:)?(dart:[^\s]+|[^\s]+)');

  String getTag() {
    final stackTraceList = StackTrace.current.toString().split('\n');
    discardUnnecessaryTrace(stackTraceList);

    final line = stackTraceList.first;

    return '${_getFileName(line)}-${_getLineNumber(line)}';
  }

  void discardUnnecessaryTrace(List<String> stackTraceList) {
    stackTraceList.removeWhere((line) {
      return _discardDeviceStacktraceLine(line) ||
          _discardWebStacktraceLine(line) ||
          _discardBrowserStacktraceLine(line) ||
          line.trim().isEmpty;
    });
  }

  String _getFileName(String trace) {
    final lastIndexOfSlash = trace.lastIndexOf('/');
    final lastIndexOfDart = trace.lastIndexOf('.dart');

    return trace.substring(lastIndexOfSlash + 1, lastIndexOfDart);
  }

  String _getLineNumber(String trace) {
    final indexOfNumber = trace.lastIndexOf(':');
    final lastIndexOfDart = trace.lastIndexOf('.dart');

    return trace.substring(lastIndexOfDart + 6, indexOfNumber);
  }

  bool _discardDeviceStacktraceLine(String line) {
    final match = _deviceStackTraceRegex.matchAsPrefix(line);
    if (match == null) {
      return false;
    }

    return match.group(2)!.startsWith('package:groveman');
  }

  bool _discardWebStacktraceLine(String line) {
    final match = _webStackTraceRegex.matchAsPrefix(line);
    if (match == null) {
      return false;
    }

    return match.group(1)!.startsWith('packages/groveman') ||
        match.group(1)!.startsWith('dart-sdk/lib');
  }

  bool _discardBrowserStacktraceLine(String line) {
    final match = _browserStackTraceRegex.matchAsPrefix(line);
    if (match == null) {
      return false;
    }

    return match.group(1)!.startsWith('package:groveman') ||
        match.group(1)!.startsWith('dart:');
  }
}
